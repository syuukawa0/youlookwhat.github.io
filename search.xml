<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[Mac搭建Hexo博客流程记录，排雷完成]]></title>
      <url>%2F2016%2F11%2F19%2FMac%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95%EF%BC%8C%E6%8E%92%E9%9B%B7%E5%AE%8C%E6%88%90%2F</url>
      <content type="text"><![CDATA[经过一天的辛苦作战，总算基础的东西出来了。踩了太多的坑，综合我踩坑的经过，明白到，选好一篇引导文很重要！有些步骤不要先做了，不然后面你都不知道怎么死的.. 引很多博客都已经详细讲述了Hexo博客框架的好处和怎么做，下面的推荐文章里会给出链接。但有些过于复杂，让初次配置的人有点雨里雾里；有些又太简单，除了问题就会不知道怎么回事。 在此感谢小马哥Mark和 wingjay先前分享的教程，有些段落是从你们里摘抄过来的，希望博主见谅，如有侵权，请联系我删除。 Ok，现在开始： GitHub Pages在不购买服务器的前提下，我们的网站需要挂在GitHub Pages上。GitHub Pages是面向用户、组织和项目开放的公共静态页面搭建托管服务，可用于搭建个人博客。 你需要拥有一个GitHub账号，去完成新手任务吧。 进入GitHub Pages，一步步做，完成后就能在浏览器打开http://username.github.io了。 至此，我们已经利用GitHub Pages搭建好了个人博客雏形了。下面要做的，就是个性化了。 注：如果你http://username.github.io首页就要是博客首页的话，就是这样。完成后可以把index.html给删了，因为到最后你发现那是没用的，如果你又配置了子目录，它会给你造成干扰。 前期准备安装Hexo参考中文文档或英文文档。完成该步后，你的电脑便拥有了Git、Node.js和Hexo。 测试安装状态1234567$ node -v v4.2.4$ npm -v2.14.12$ hexo -v 正式开始 确定拥有了Git、Node.js和Hexo后，进行下一步 建站安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。 123$ hexo init &lt;folder&gt;$ cd &lt;folder&gt;$ npm install 新建完成后，指定文件夹的目录如下： 12345678.├── _config.yml├── package.json├── scaffolds├── source| ├── _drafts| └── _posts└── themes 这样Hexo会在该文件夹创建本地博客所需的一切资源。这样本地博客就搭建好了，输入以下命令： 1hexo s --debug 这样就开启了一个本地博客服务器，打开浏览器，在地址栏输入localhost:4000，就可以查看本地博客了，hexo默认生成了一片hello world博客。按control + c关闭调试。 注意：以上hexo开头的命令，执行目录必须是你创建的博客文件夹目录。hexo s –debug 使用 hexo s 也可以；// 启动本地hexo 服务器，默认localhost:4000可以访问 同步Hexo博客到Github现在你已经可以在本机查看你的博客了，但是要想让别人通过网络可以查看你的博客，还需要一步，那就是将你的博客发布到github仓库。在terminal终端，将当前目录切换到你的本地博客目录，执行以下命令： 1npm install hexo-deployer-git --save 安装完成之后，打开本地博客目录的_config.yml文件，编辑其中的deploy节点： 1234deploy: type: git repo: https://github.com/youlookwhat/youlookwhat.github.io.git branch: master 注意：字段前需加空格，hexo有严格的格式规范。 保存配置之后，你可以不着急传到仓库，先刷新本地博客，看是否还是原样，如有问题可以看到log日志上的错误信息，然后检查没问题为止。 确认无误之后，在本地博客目录执行以下命令： 123hexo clean // clean本地项目，防止缓存hexo g // 全拼是：hexo generate，可以简写成 hexo g; 根据你编辑的md格式的博客，生成静态网页hexo d // 全拼是：hexo deploy，可以简写成 hexo d; 将本地博客发布到github 然后，在浏览器地址栏输入username.github.io就可以访问你的博客了，别人也可以通过这个地址访问你的博客。如果错误请重复看以前流程，或参考其他文章，也可以联系我. NexT主题配置及优化 Next主题 Hexo主题非常多，可以参考丰富多彩的Hexo主题，本文选Next为主题，NexT主题是一套简约的主题，设置完成之后，就像我的博客现在的样子，里面有详细的配置说明，这里就不重述了。 注意：因为hexo有严格的格式规范，所以建议配置时及时刷新页面，确定配置成功后再同步到仓库。 修饰环节上面主题严格来讲也属于修饰。现在说的主要有： 域名设置 fork me on github HTTP -&gt; HTTPS 域名设置大家可以看：替换自己的域名 ,里面讲述的详细。 注意：在万网买了域名以后直接在里面配置，这里只是参考用的。 Fork me on github &amp; HTTP -&gt; HTTPS大家可以看：Fork me on github &amp; HTTP -&gt; HTTPS 注意：配置后进入调试模式测试一下，这样错了就可以马上更正。 常用命令 cd 到仓库所在文件夹目录下： 1234567hexo init //在指定目录执行该命令，会将当前目录初始化为hexo站点，生成hexo站点所需的一切文件hexo new “my new blog title” //新建一篇文章。如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。如果标题包含空格的话，请使用引号括起来。hexo server // 或者简写成hexo s 启动本地hexo 服务器，默认localhost:4000可以访问hexo clean // 清除缓存，如果对本地文件做了修改，同步到远程验证修改的效果之前，先clean，清除缓存hexo generate // 可以简写成hexo g 根据markdown文件生成静态文件hexo deploy // 或者简写成hexo d 将本地修改，部署到远端hexo version // 显示hexo版本 推荐文章 Mac搭建Hexo博客及NexT主题配置优化 如何在一天之内搭建以你自己名字为域名又具备cool属性的个人博客 使用GitHub和Hexo搭建免费静态Blog mac安装node的方法 Mac下安装Node并切换taobao.org源 联系我 我的Github 我的简书 我的CSDN]]></content>
    </entry>

    
  
  
</search>
